<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String transferStringThroughDataClass(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="5"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="5" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="5" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="5"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow11(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow6(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String storeStringInGapClass(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String" gap="7" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.String" gap="8"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="7"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="8"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="8"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String storeAliasInGapClass(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="11"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="10"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="11"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="10" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="11"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="9"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="10"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="9"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void setStringField(java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToFieldT1(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String makeStringUserCodeClass(soot.jimple.infoflow.test.methodSummary.IUserCodeClass,java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.String" gap="4"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IUserCodeClass" gap="4"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IUserCodeClass" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String" gap="4" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IUserCodeClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IUserCodeClass" gap="4"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToparaFlow2(int,java.lang.Object,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToParaT3(soot.jimple.infoflow.test.methodSummary.Data,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow7(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToField1()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int paraToVar(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object standardFlow(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String transferNoStringThroughDataClass(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="6" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="6"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="6" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="6"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField2&gt;]" AccessPathTypes="[java.lang.String]" gap="6"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data mixedFlow1(int,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToPara(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String shiftTest(soot.jimple.infoflow.test.methodSummary.Data,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToField2()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object noThisFlow3()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int standardFlow2Com(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow5(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void staticParaToparaFlow3(int,java.lang.Object,soot.jimple.infoflow.test.methodSummary.Data,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="3" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object getObjectField()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int standardFlow3(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int intInDataToReturn()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data paraToVarX(int,java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToFieldT22(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToparaFlow1(int,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int intInDataToReturn3()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void swap2()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void setObjectField(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data mixedFlow1small(int,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data paraToVar2(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow9(soot.jimple.infoflow.test.methodSummary.Data,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void staticParaToparaFlow1(int,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void swap()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToField(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object getNonPrimitiveData2AP3()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data retrieveData()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToPara2(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataFieldToReturn()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data getNonPrimitive2Variable()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object getNonPrimitive1Data()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data staticStandardFlow2(int,java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToFieldT2(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fillDataObject(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" gap="3" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data" gap="3"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="3"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="3"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String" gap="3" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int intParaToReturn()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void data1ToDate2()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToParaT4(soot.jimple.infoflow.test.methodSummary.Data,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data staticParaToVar2(int,java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int getPrimitiveVariable()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int standardFlow(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String makeString(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.String" gap="2"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String" gap="2" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="2"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object getNonPrimitiveData1APL3()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data getNonPrimitiveVariable()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToParaT(soot.jimple.infoflow.test.methodSummary.Data,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void set(soot.jimple.infoflow.test.methodSummary.ApiClass$Node)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass$Node"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.ApiClass$Node first&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.ApiClass$Node]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String storeAliasInGapClass2(soot.jimple.infoflow.test.methodSummary.IGapClass,java.lang.String)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="13" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="14"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="13"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField2&gt;]" AccessPathTypes="[java.lang.String]" gap="14" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" gap="14"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="12"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField2&gt;]" AccessPathTypes="[java.lang.String]" gap="14" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="12"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="13"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="13"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.IGapClass" gap="14"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void setPrimitiveVariable(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToSamePara(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField2&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField2&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToparaFlow3(int,java.lang.Object,soot.jimple.infoflow.test.methodSummary.Data,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="3" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void storeData(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object noThisFlow2(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow8(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void staticParaToparaFlow2(int,java.lang.Object,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToField3()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int primitiveVariable&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToField5()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data paraToStaticVar2(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void fieldToField4()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToParaT2(soot.jimple.infoflow.test.methodSummary.Data,soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String getStringField()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int intInDataToReturn2()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToField2(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object get()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.ApiClass$Node first&gt;, &lt;soot.jimple.infoflow.test.methodSummary.ApiClass$Node: java.lang.Object item&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.ApiClass$Node, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToFieldT33(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int standardFlow2(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String toString()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: int staticStandardFlow1(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow4(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToVarY(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object[] objs&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataFieldToReturn2()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToFieldT3(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField2&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void setNonPrimitiveData1APL3(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: void paraToSamePara2(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" gap="1"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.Data" gap="1"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: java.lang.Object objInDataFieldToReturn()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.ApiClass" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data dataField&gt;, &lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[soot.jimple.infoflow.test.methodSummary.Data, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.ApiClass: soot.jimple.infoflow.test.methodSummary.Data standardFlow10(soot.jimple.infoflow.test.methodSummary.Data)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="Return" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="12" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: void storeData(soot.jimple.infoflow.test.methodSummary.Data)&gt;"></gap><gap num="6" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: soot.jimple.infoflow.test.methodSummary.Data dataThroughGap(soot.jimple.infoflow.test.methodSummary.Data)&gt;"></gap><gap num="13" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: soot.jimple.infoflow.test.methodSummary.Data retrieveData()&gt;"></gap><gap num="5" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: soot.jimple.infoflow.test.methodSummary.Data dataThroughGap(soot.jimple.infoflow.test.methodSummary.Data)&gt;"></gap><gap num="7" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: void storeString(java.lang.String)&gt;"></gap><gap num="8" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: java.lang.String retrieveString()&gt;"></gap><gap num="2" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: java.lang.String callTheGap(java.lang.String)&gt;"></gap><gap num="9" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: void storeData(soot.jimple.infoflow.test.methodSummary.Data)&gt;"></gap><gap num="10" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: soot.jimple.infoflow.test.methodSummary.Data retrieveData()&gt;"></gap><gap num="1" id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void switchData()&gt;"></gap><gap num="14" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: soot.jimple.infoflow.test.methodSummary.Data retrieveData()&gt;"></gap><gap num="3" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: void fillDataString(java.lang.String,soot.jimple.infoflow.test.methodSummary.Data)&gt;"></gap><gap num="11" id="&lt;soot.jimple.infoflow.test.methodSummary.IGapClass: soot.jimple.infoflow.test.methodSummary.Data retrieveData()&gt;"></gap><gap num="4" id="&lt;soot.jimple.infoflow.test.methodSummary.IUserCodeClass: java.lang.String callTheGap(java.lang.String)&gt;"></gap></gaps></summary>
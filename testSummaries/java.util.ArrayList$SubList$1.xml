<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="&lt;java.util.ArrayList$SubList$1: int nextIndex()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList$1: void add(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="1"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="1" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="1" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="1" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="1"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList$1: void set(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList$1: int previousIndex()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList$1: java.lang.Object next()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int lastRet&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList$1: void remove()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int lastRet&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="0" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="0" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int lastRet&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int lastRet&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="0"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList$1: java.lang.Object previous()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int lastRet&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;, &lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList$SubList, java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="0" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="1" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap></gaps></summary>
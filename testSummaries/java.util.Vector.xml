<?xml version="1.0" ?><methods><method id="&lt;java.util.AbstractList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: int size()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void addElement(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: int lastIndexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void setSize(int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: int capacity()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void &lt;init&gt;(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.lang.Object"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.lang.Object mutex&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: int lastIndexOf(java.lang.Object,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object get(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: boolean addAll(int,java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: boolean add(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.util.Enumeration elements()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$1" AccessPath="[&lt;java.util.Vector$1: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int elementCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$Itr: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.util.ListIterator listIterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$ListItr" AccessPath="[&lt;java.util.Vector$ListItr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void setElementAt(java.lang.Object,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object elementAt(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.util.Collection c&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.lang.Object"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedCollection" AccessPath="[&lt;java.util.Collections$SynchronizedCollection: java.lang.Object mutex&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Collections$SynchronizedList" AccessPath="[&lt;java.util.Collections$SynchronizedList: java.util.List list&gt;, &lt;java.util.SubList: int size&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object[] toArray()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void add(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void copyInto(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.String toString()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.lang.Object[], char[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void insertElementAt(java.lang.Object,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.Vector"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector$Itr" AccessPath="[&lt;java.util.Vector$Itr: java.util.Vector this$0&gt;]" AccessPathTypes="[java.util.Vector]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object firstElement()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object lastElement()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: void &lt;init&gt;(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: int capacityIncrement&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object clone()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.String toString()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.Vector" AccessPath="[&lt;java.util.Vector: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.lang.Object[], char[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.Vector: int indexOf(java.lang.Object,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method></methods>
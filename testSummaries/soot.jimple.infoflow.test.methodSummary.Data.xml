<?xml version="1.0" ?><summary fileFormatVersion="100"><methods><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object getData()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void setValue(int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: int getValue()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void setI(java.lang.String)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.String"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void setO(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String getI()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.String stringField&gt;]" AccessPathTypes="[java.lang.String]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object getO()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void setData(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void switchData()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField2&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField2&gt;]" AccessPathTypes="[java.lang.Object]"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void switchSwitch()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" gap="0"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data"></from><to sourceSinkType="GapBaseObject" BaseType="soot.jimple.infoflow.test.methodSummary.Data" gap="0"></to></flow></flows></method><method id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void &lt;init&gt;(java.lang.Object,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: java.lang.Object objectField&gt;]" AccessPathTypes="[java.lang.Object]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="soot.jimple.infoflow.test.methodSummary.Data" AccessPath="[&lt;soot.jimple.infoflow.test.methodSummary.Data: int value&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="0" id="&lt;soot.jimple.infoflow.test.methodSummary.Data: void switchData()&gt;"></gap></gaps></summary>
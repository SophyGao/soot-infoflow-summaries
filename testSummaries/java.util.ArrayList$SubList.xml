<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="&lt;java.util.ArrayList$SubList: boolean addAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="118"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="118" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="118" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="118" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="118"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="118" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="118" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="122"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="122" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="122"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="122" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.util.Iterator iterator()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.Iterator iterator()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: void &lt;init&gt;()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="119" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="119"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="119" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="119" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="119"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.util.List subList(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean remove(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="131"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="131"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="131" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="131"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="131"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.List subList(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void clear()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="123"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="123"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="123"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="123" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="123"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="123" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="123" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: void removeRange(int,int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="117" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="117" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="117" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="117"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="117" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.lang.Object remove(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="116"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="116"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="116" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="116" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="116"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="116"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="116"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: int size()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean removeAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="135" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="135"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="135"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="135"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean retainAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="136"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="136" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="136"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="136"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.lang.Object get(int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean equals(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="128"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="129" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="125"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="126"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="126"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="128"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="128"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="126"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="125"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="129"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="129"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="125"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: void add(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="115"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="115"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="115"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="115"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="115" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="115" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="115"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="115" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean add(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="120" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="120"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="120" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="120"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="120"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="120" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="120"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="120"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.util.ListIterator listIterator(int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.String toString()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[], char[]]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean containsAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="132"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="132"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="132"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="132" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean addAll(java.util.Collection)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="133" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="133" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="133"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="133" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="133" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="133"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="133" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void &lt;init&gt;()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="131" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="123" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="117" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="136" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="129" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="125" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="116" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="128" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="126" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="119" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="118" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="135" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="133" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="120" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="132" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="122" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="115" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap></gaps></summary>
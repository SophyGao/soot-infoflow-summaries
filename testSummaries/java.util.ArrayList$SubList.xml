<?xml version="1.0" ?><summary fileFormatVersion="100"><methods><method id="&lt;java.util.ArrayList$SubList: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="33"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="33" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="33"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="33" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="33"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="33" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="33"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="33"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="33" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="33"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="39" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="39"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="39" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="39" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="37" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="37" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="37"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="37"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="45"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="45" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="45" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="34"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" gap="34"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="34" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="34"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="34"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="34" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="34" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="34"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean remove(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="46"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="46" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="46"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="46"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void clear()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="38"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="38" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="38"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="38"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="38" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: void removeRange(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="32" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="32"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="32" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="32" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="32"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="32"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="32" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="31" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="31"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="31" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="31"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="31"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="31"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: int size()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean removeAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="50"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="50" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="50"></to></flow><flow><from sourceSinkType="Field" BaseType="java.lang.Object" gap="50"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="49" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="49"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean retainAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="52"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="52" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="51"></to></flow><flow><from sourceSinkType="Field" BaseType="java.lang.Object" gap="52"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="51" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="52"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.lang.Object get(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean equals(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="40"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="43"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="44" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="44"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="41"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="43"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="43"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="41"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="41"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="42"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="40"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="42"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="43"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="42"></to></flow><flow><from sourceSinkType="Field" BaseType="java.lang.Object" gap="44"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.List" gap="40"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="40"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="41"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: void add(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="30" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="30"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="30" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="30" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="30"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="30"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="30"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean add(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="35"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="35" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="35"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="35"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="35" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="35"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.ArrayList$SubList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int cursor&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.ArrayList, int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: int val$offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ArrayList$SubList$1" AccessPath="[&lt;java.util.ArrayList$SubList$1: java.util.ArrayList$SubList this$1&gt;]" AccessPathTypes="[java.util.ArrayList$SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.String toString()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;, &lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[], char[]]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean containsAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="47"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="47"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="47" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.lang.Object" gap="47"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.ArrayList this$0&gt;, &lt;java.util.ArrayList: java.lang.Object[] elementData&gt;]" AccessPathTypes="[java.util.ArrayList, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="36"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="36" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="36" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="36" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="48" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: int parentOffset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="48" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ArrayList$SubList" AccessPath="[&lt;java.util.ArrayList$SubList: java.util.AbstractList parent&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="48"></to></flow></flows></method></methods><gaps><gap num="40" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="49" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="31" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="41" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="48" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="34" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="33" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="42" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="47" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="46" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="36" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="45" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="35" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="51" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="44" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="37" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="30" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="43" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="52" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="38" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="39" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="32" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="50" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap></gaps></summary>
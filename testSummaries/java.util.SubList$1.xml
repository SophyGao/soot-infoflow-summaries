<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="&lt;java.util.SubList$1: void set(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="9"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="9" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="9"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: boolean hasPrevious()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="3"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="3"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: void remove()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="8"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="8"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: int nextIndex()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="6"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="int" gap="6"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="6"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: java.lang.Object next()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="2"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="1"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="1"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="1"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="2"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: int previousIndex()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[java.util.SubList, int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="7"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="7"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="int" gap="7"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: java.lang.Object previous()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="4"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="5"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="4"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="5"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="4"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="5"></to></flow></flows></method><method id="&lt;java.util.SubList$1: void add(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="10"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="10"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="10" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="10"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.SubList, int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList$1: boolean hasNext()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="0"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="6" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="5" id="&lt;java.util.ListIterator: java.lang.Object previous()&gt;"></gap><gap num="0" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="7" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap><gap num="8" id="&lt;java.util.ListIterator: void remove()&gt;"></gap><gap num="2" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="9" id="&lt;java.util.ListIterator: void set(java.lang.Object)&gt;"></gap><gap num="10" id="&lt;java.util.ListIterator: void add(java.lang.Object)&gt;"></gap><gap num="1" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="3" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap><gap num="4" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap></gaps></summary>
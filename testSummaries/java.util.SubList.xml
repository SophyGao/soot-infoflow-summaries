<?xml version="1.0" ?><summary fileFormatVersion="100"><methods><method id="&lt;java.util.AbstractList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="70"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="73"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="71"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="int" gap="72"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="70"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="72"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="70"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="71"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="70" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="70"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="73"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="70"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="75" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="75" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="75"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="75" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="65" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="65"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="65" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="65"></to></flow></flows></method><method id="&lt;java.util.SubList: java.lang.Object get(int)&gt;"><flows><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="54"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="54"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="54" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="54" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="54"></to></flow></flows></method><method id="&lt;java.util.SubList: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="56"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="56"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="56" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="56" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="56"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="56"></to></flow></flows></method><method id="&lt;java.util.SubList: void add(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="55"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="55" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="55" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="55" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="55"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="55"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="55"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="90" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="90"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="90" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="90" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="90" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="76"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="76"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="76"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="76" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="97"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="99"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="98"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="98"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="99"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="97"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="99"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="99"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="99"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="97"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="98"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="97" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="97"></to></flow></flows></method><method id="&lt;java.util.SubList: void removeRange(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="57" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="57"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="57" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="57"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="57" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="57" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="57"></to></flow></flows></method><method id="&lt;java.util.SubList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="53"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="53" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="53"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="53" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="53" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="53"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="53"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean remove(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="100" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="102"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="101"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="100"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="103"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="100"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="102"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="100"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="100"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="101"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="100"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="100"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="94"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="94"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="94"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="95"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="94"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="96"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="94" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="96"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="95"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="95"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="96"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="96"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int indexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="66"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="68"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="66"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="int" gap="69"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="66"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="68"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="67"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="66" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="66"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="67"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="66"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="69"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void clear()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="74" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="74"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="74"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="74"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="74" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="63" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="63" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="63"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="63"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="63" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: int size()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="78"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="78"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="78"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="78" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean removeAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="109"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="111"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="111"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="113"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="109"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="109"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="110"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="109"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="112"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="111"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="113" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="109" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="109"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="109"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="109"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="109"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="109" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="111"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="110"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="77"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="77"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="77" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="77"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="77"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean retainAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="116"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="115"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="114"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="117"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="114" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="116"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="118"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="114"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="114"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="114"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="116"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="118" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="114"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="114"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="114"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="116"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="114" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="114"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="115"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="60" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="60"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="60"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="60"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="60"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean equals(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="79"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="80"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="86"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="84"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="84"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="86"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="83"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="84"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="79"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="83"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.List" gap="83"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="86"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="82" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="84"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="85"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="86"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="85"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="81"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="80"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="83"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="85"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="81"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="82"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="79"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="79" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="79"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="81"></to></flow></flows></method><method id="&lt;java.util.SubList: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="58"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="58" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="58"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" gap="58"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="58" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="58"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="58"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int hashCode()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="87"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="87"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="89"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="87" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="89"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="88"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="87"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="87"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="88"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean add(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="62"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="62"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="62" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="62" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="62"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="62"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean containsAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="106"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="105"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="104"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="104" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="104"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="106"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="107"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="104"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="104"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="105"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="104" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="104"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" gap="106"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="107" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="104"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="106"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="64" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="64" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="64" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="64"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="61"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="61" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="61"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="61"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="61"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean contains(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="91"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="93"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="92"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="91" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="91"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="92"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="91"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="93"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="91"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.String toString()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="119"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="119"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="121"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.ListIterator" gap="119"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="120"></to></flow><flow><from sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" gap="121"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="121"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="120"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="119" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="108" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="108" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="108"></to></flow></flows></method><method id="&lt;java.util.SubList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="59" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="59"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="59" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="59"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="59" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="59"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="59"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" gap="59"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="67" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="114" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="95" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="75" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="55" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="96" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="103" id="&lt;java.util.ListIterator: void remove()&gt;"></gap><gap num="89" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="110" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="117" id="&lt;java.util.ListIterator: void remove()&gt;"></gap><gap num="68" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="62" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="83" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="111" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="69" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap><gap num="97" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="88" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="61" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="116" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="74" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="56" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="84" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="70" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="91" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="81" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="98" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="102" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="119" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="101" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="73" id="&lt;java.util.ListIterator: java.lang.Object previous()&gt;"></gap><gap num="108" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="53" id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"></gap><gap num="99" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="90" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="118" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="72" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="63" id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"></gap><gap num="54" id="&lt;java.util.AbstractList: java.lang.Object get(int)&gt;"></gap><gap num="109" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="82" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="100" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="86" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="58" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="78" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="92" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="64" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="71" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap><gap num="120" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="85" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="80" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="57" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="107" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="106" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="65" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="121" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="93" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="79" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="112" id="&lt;java.util.ListIterator: void remove()&gt;"></gap><gap num="77" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="105" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="60" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="94" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="66" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="104" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="76" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="59" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="115" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="87" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="113" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap></gaps></summary>
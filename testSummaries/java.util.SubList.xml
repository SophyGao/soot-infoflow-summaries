<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="&lt;java.util.AbstractList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="47" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="47" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="47"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="47"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="47"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="49"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="int" gap="49"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="52"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="52" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="52" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="52" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]" gap="52"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="52" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="42"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="42" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="42"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="42" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.lang.Object get(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="31" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="31"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="31" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="31"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="31"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.lang.Object remove(int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="33"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="33" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="33"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="33" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="33"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="33"></to></flow></flows></method><method id="&lt;java.util.SubList: void add(int,java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="32" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="32"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="32"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="32" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="32"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="32"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="32" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.Iterator iterator()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="53"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="53" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="53"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="53"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="74"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="75"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="76"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="74"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="74" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="76"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="75"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="75"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="76"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="74"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="74"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="76"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="76"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: void removeRange(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="34" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="34" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="34"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="34" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="34"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="34"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="34" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: void &lt;init&gt;()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="30" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="30"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="30"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="30" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="30"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="30" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="30"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean remove(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="77" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="77"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="77"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="77"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="71"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="71" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="71"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="73"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="73"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="71"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="72"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="73"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="73"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="72"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="71"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="72"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int indexOf(java.lang.Object)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="int" gap="46"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="43"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="43"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="46"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="43" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="43"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="45"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="43"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.List subList(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void clear()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="51"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="51" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="51" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="51"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="51" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="51"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="40"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="40"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="40" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="40" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="40" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: int size()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="55"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="55" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="55"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="55"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="55" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean removeAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="86"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="86" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="86"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="86"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="86"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="88"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="86"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="86" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="86"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator()&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="54" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="54"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="54"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="54"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="54"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.List subList(int,int)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.SubList" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean retainAll(java.util.Collection)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="91" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="91"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="91"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="91"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="91"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="91" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="91"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.Iterator iterator()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="37"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="37"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="37"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="37"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="37" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean equals(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="56"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="58"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="57"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="57" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="56"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="57"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="56"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="60"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="58"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="58"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="60"></to></flow></flows></method><method id="&lt;java.util.SubList: boolean addAll(java.util.Collection)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="35" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" gap="35"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="35" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="35"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="35"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="35" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" gap="35"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="35" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="35"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="35" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="35"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]" gap="35"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int hashCode()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="64"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="64"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="64" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean add(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="39"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="39" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="39"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="39"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="39"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="39" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="39" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean containsAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="81"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="81"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="81" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="81"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="83"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="81"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="81" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="81"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.ListIterator listIterator(int)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="38"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="38" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="38"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="38"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="38" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="38"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean contains(java.lang.Object)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="68"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="68" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="68"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.String toString()&gt;"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="96"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="96" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="96"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" gap="98"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="96"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="98"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean addAll(java.util.Collection)&gt;"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="85" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="85" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="85" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="85" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="85"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" gap="85"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="85" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="36"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="36"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="36" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="36" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="36" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="36"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="36"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]" gap="36"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="36" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]" gap="36"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" gap="36"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="40" id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"></gap><gap num="49" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="31" id="&lt;java.util.AbstractList: java.lang.Object get(int)&gt;"></gap><gap num="96" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="75" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="68" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="55" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="83" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="34" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="33" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="42" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="47" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="88" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="74" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="56" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="91" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="81" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="98" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="46" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap><gap num="73" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="53" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="36" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="45" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="35" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="72" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="54" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="51" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="86" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="37" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="58" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="64" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="43" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="71" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="30" id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"></gap><gap num="52" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="85" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="57" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="38" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="77" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="60" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="39" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="32" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="76" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap></gaps></summary>
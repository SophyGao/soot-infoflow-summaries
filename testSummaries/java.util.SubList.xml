<?xml version="1.0" ?><methods><method id="&lt;java.util.SubList: java.lang.Object remove(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int lastIndexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: void add(int,java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: void removeRange(int,int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean remove(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: int indexOf(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: void clear()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: int size()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean removeAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: java.util.ListIterator listIterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.List subList(int,int)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractCollection: boolean retainAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.Iterator iterator()&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: boolean addAll(java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.AbstractList: boolean add(java.lang.Object)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: java.util.ListIterator listIterator(int)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" ReturnLocal="true" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="&lt;java.util.SubList: boolean addAll(int,java.util.Collection)&gt;"><flows><flow><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods>
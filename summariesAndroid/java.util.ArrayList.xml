<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="java.lang.Object clone()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$SimpleListIterator: java.util.AbstractList this$0&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$SimpleListIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$FullListIterator: java.util.AbstractList this$0&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="java.util.List subList(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: java.util.AbstractList fullList&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: java.util.AbstractList fullList&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractListRandomAccess" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: java.util.AbstractList fullList&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: java.util.AbstractList fullList&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="10" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="10"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="10"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="10" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="10"></to></flow></flows></method><method id="void add(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object[]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object[]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object set(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(int,java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="0"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="0"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="0"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="5"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="4"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.Iterator" gap="3"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Iterator" gap="6"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object[]" gap="5"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object[]" gap="7"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="2"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="7"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="4"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="2"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="4"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="4"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="5"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="7"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="7"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="5"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="6"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="7" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="3"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="4"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="5" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="2"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="3"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="3"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="3"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="2"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="1"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="1"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="1"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="9"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="9" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="9"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="9" taintSubFields="true"></to></flow></flows></method><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object get(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$SimpleListIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$FullListIterator: java.util.AbstractList this$0&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$SimpleListIterator: java.util.AbstractList this$0&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$FullListIterator" AccessPath="[&lt;java.util.AbstractList$SimpleListIterator: int pos&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$ArrayListIterator" AccessPath="[&lt;java.util.ArrayList$ArrayListIterator: java.util.ArrayList this$0&gt;]" AccessPathTypes="[java.util.ArrayList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$ArrayListIterator" AccessPath="[&lt;java.util.ArrayList$ArrayListIterator: int remaining&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.ArrayList$ArrayListIterator" AccessPath="[&lt;java.util.ArrayList$ArrayListIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="8"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="8" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="8"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="8" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="8"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="void removeRange(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="0" id="&lt;java.util.Collection: java.lang.Object[] toArray()&gt;"></gap><gap num="1" id="&lt;java.util.Collection: java.lang.Object[] toArray()&gt;"></gap><gap num="2" id="&lt;java.util.List: int size()&gt;"></gap><gap num="3" id="&lt;java.util.List: java.util.Iterator iterator()&gt;"></gap><gap num="4" id="&lt;java.util.List: java.lang.Object get(int)&gt;"></gap><gap num="5" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="6" id="&lt;java.util.Iterator: java.lang.Object next()&gt;"></gap><gap num="7" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="8" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="9" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="10" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap></gaps></summary>
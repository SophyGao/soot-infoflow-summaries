<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="java.lang.Object poll()"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="553"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="551"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="551"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="553"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="552"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="551"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="551"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="551"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="552"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="551"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="551"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="553"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="551"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="551"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="551"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="553"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="551"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="553"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="553"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="552"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="553" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.concurrent.Delayed take()"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="574"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="574"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="576"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="575"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="575"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="576"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node lastWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="574"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="576"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="576"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="574"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="574"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="576"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="574"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="574"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="574"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="576"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="574"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="574"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="574"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="576" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="575"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.concurrent.Delayed poll()"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="560"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="558"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="558"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="558"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="560"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="560"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="558"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="558"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="558"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="558"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="559"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="559"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="560"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="558"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="558"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="560"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="559"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="558"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="560"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="558"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="560" taintSubFields="true"></to></flow></flows></method><method id="java.util.concurrent.Delayed poll(long,java.util.concurrent.TimeUnit)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="562"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="long"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="long" gap="561" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="562"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="562"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="562"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="564"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="563"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="564"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="564"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="562"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.concurrent.TimeUnit"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.concurrent.TimeUnit" gap="561"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.TimeUnit" gap="561"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.concurrent.TimeUnit" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="562"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="562"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="564"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="563"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="562"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="562"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="562"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="564"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="563"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="562"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="564" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node lastWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="564"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="void put(java.util.concurrent.Delayed)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="568"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="568"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.concurrent.Delayed[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="568"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="567"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="567"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="568"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="568"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="568" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="568"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="568" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="568"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="567" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="int drainTo(java.util.Collection,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="542"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="540"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="540"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="542"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="542"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="542"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="540"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="540"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="542"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="539"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="542"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="539"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="542" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="541"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="540"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="539" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="541" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="539"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="540"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="542"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="540"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="541"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean offer(java.util.concurrent.Delayed,long,java.util.concurrent.TimeUnit)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="550" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.concurrent.Delayed[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="549"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="550"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="550"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="550"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="550"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="549"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="549" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="550"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="549"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="550"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="550"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="550"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object take()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="572"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="571"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="571"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="571"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="571"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="571"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="571"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="572"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="571"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="571"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="573"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="572"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="571"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node lastWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="571"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="572"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="572"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="572"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.AbstractQueuedSynchronizer, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="572"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="573"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="571"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="573"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object element()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="577"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="578" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="578"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="578"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="578"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="577"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="578"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="578"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="578"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="578" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="577"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="578"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow></flows></method><method id="void put(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="565"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="565"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="565" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="566"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="565"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="565"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="565"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="565"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="565" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="566" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="566"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="589"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" gap="589"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object peek()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean add(java.util.concurrent.Delayed)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="533"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="533"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="534" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="534"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="534"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="534"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="534"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="534"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="534"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="534"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="534" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="533" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.DelayQueue$Itr" AccessPath="[&lt;java.util.concurrent.DelayQueue$Itr: java.util.concurrent.DelayQueue this$0&gt;, &lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.DelayQueue, java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.DelayQueue$Itr" AccessPath="[&lt;java.util.concurrent.DelayQueue$Itr: java.util.concurrent.DelayQueue this$0&gt;, &lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.DelayQueue, java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.DelayQueue$Itr" AccessPath="[&lt;java.util.concurrent.DelayQueue$Itr: java.util.concurrent.DelayQueue this$0&gt;, &lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.concurrent.DelayQueue, java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.DelayQueue$Itr" AccessPath="[&lt;java.util.concurrent.DelayQueue$Itr: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.DelayQueue$Itr" AccessPath="[&lt;java.util.concurrent.DelayQueue$Itr: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean isEmpty()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="void &lt;init&gt;()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object clone()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove()"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="581"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="579"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="580"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="579"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="581"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="579"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="579"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="579"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="581"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="581"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="579"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="579"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="579"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="579"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="579"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="580"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="580" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="581"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="581"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="579"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="581" taintSubFields="true"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="588"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="587"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="588"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="587"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="586"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="587"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="587"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="588"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="587"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="588" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="587"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="588"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="588"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="587"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="587"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="586"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="587"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="588"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="586"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="587"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="588"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="587" taintSubFields="true"></to></flow></flows></method><method id="boolean offer(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="543"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="543"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="544"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="543" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="543"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="543"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="544"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="543"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="544"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="543"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="543"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="543" taintSubFields="true"></to></flow></flows></method><method id="boolean offer(java.util.concurrent.Delayed)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="547"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.concurrent.Delayed[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="548"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="548"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="547"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="547"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="547" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="547"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="547"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="547"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="547"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="547"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="548"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.concurrent.Delayed peek()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="585"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="584"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="584"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="585"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="585"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="583"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="585"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="585"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="583"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="583"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="583"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="583"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="585"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="583"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="585"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="583"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="585" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="583"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="583" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="583"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="584" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="583"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow></flows></method><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="531"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="532" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="531"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="532"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="532"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="532"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="532"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="532" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="532"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="532"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="531" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object poll(long,java.util.concurrent.TimeUnit)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="556"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="557"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.concurrent.TimeUnit"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.concurrent.TimeUnit" gap="554"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="555"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.TimeUnit" gap="554"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.concurrent.TimeUnit" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="556"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="557"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="555"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="555"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="555"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="557"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="555"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node lastWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="555"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="555"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node firstWaiter&gt;]" AccessPathTypes="[java.util.concurrent.locks.Condition, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, java.util.concurrent.locks.AbstractQueuedSynchronizer$Node]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Return" BaseType="java.lang.Comparable" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="long"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="long" gap="554" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="557"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="555"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="555"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="555"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="555"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="556"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="557"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="557" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="557"></to></flow></flows></method><method id="boolean remove(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="569"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="569"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="570"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="570"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="570"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="570"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="570"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="570"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="570"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="570"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="570"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="570"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="569"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow></flows></method><method id="int drainTo(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Comparable[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="538"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="535"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="536"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="536"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="537"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="537"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="538"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="538"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="538"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="536"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="538"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="536"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="538"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="535" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="536"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="538" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="535"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="535"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="536"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="537" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="536"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="538"></to></flow></flows></method><method id="boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="546"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Comparable" gap="546" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: int size&gt;]" AccessPathTypes="[java.util.PriorityQueue, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Comparator" gap="545"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="546"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="546"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="546"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Comparable" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="546"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.util.Comparator comparator&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.util.Comparator]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Comparator" gap="545"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="546"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="545"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Comparable" gap="546"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="546" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="582"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.Delayed" gap="582"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.Delayed" gap="582"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.PriorityQueue q&gt;, &lt;java.util.PriorityQueue: java.lang.Object[] elements&gt;]" AccessPathTypes="[java.util.PriorityQueue, java.lang.Object[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="582" taintSubFields="true"></to></flow></flows></method><method id="boolean contains(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.ReentrantLock lock&gt;, &lt;java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.ReentrantLock$Sync sync&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.ReentrantLock, java.util.concurrent.locks.ReentrantLock$Sync, int]"></from><to sourceSinkType="Field" BaseType="java.util.concurrent.DelayQueue" AccessPath="[&lt;java.util.concurrent.DelayQueue: java.util.concurrent.locks.Condition available&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject: java.util.concurrent.locks.AbstractQueuedSynchronizer this$0&gt;, &lt;java.util.concurrent.locks.AbstractQueuedSynchronizer: int state&gt;]" AccessPathTypes="[java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject, java.util.concurrent.locks.ReentrantLock$Sync, int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="531" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="532" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="533" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="534" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="535" id="&lt;java.util.Collection: boolean add(java.lang.Object)&gt;"></gap><gap num="536" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="537" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="538" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="539" id="&lt;java.util.Collection: boolean add(java.lang.Object)&gt;"></gap><gap num="540" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="541" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="542" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="543" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="544" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="545" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="546" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="547" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="548" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="549" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="550" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="551" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="552" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="553" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="554" id="&lt;java.util.concurrent.TimeUnit: long toNanos(long)&gt;"></gap><gap num="555" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="556" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="557" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="558" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="559" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="560" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="561" id="&lt;java.util.concurrent.TimeUnit: long toNanos(long)&gt;"></gap><gap num="562" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="563" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="564" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="565" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="566" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="567" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="568" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="569" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="570" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="571" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="572" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="573" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="574" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="575" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="576" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="577" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="578" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="579" id="&lt;java.util.concurrent.Delayed: long getDelay(java.util.concurrent.TimeUnit)&gt;"></gap><gap num="580" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="581" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="582" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="583" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="584" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="585" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="586" id="&lt;java.util.Comparator: int compare(java.lang.Object,java.lang.Object)&gt;"></gap><gap num="587" id="&lt;java.lang.Comparable: int compareTo(java.lang.Object)&gt;"></gap><gap num="588" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="589" id="&lt;java.lang.Object: java.lang.String toString()&gt;"></gap></gaps></summary>
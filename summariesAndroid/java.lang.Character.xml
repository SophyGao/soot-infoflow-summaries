<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="int toTitleCase(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean isUpperCase(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isSpaceChar(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int getNumericValue(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: int hashCode&gt;]" AccessPathTypes="[char]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: int offset&gt;]" AccessPathTypes="[char]" taintSubFields="true"></to></flow></flows></method><method id="char charValue()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="int codePointAt(char[],int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char[]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="char forDigit(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="char toLowerCase(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isDigit(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int codePointCount(java.lang.CharSequence,int,int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="7"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="8"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="6"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="7"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="8"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="8"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="7" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="6"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="7"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="6"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="6"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="7"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="8"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="6"></to></flow></flows></method><method id="char lowSurrogate(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="void &lt;init&gt;(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]" taintSubFields="true"></to></flow></flows></method><method id="boolean isDefined(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="char highSurrogate(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="int getNumericValue(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="int digit(char,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="int compareTo(java.lang.Character)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="char toUpperCase(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isLowerCase(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int getType(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="int codePointAt(char[],int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char[]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isLetter(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isUnicodeIdentifierPart(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int toCodePoint(char,char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="char"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isUnicodeIdentifierStart(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int hashCode()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="int offsetByCodePoints(char[],int,int,int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="3" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="int toLowerCase(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="char toTitleCase(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isWhitespace(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isUpperCase(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isUnicodeIdentifierStart(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int compareTo(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isIdentifierIgnorable(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isDigit(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isSpaceChar(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int toUpperCase(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean isDefined(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int offsetByCodePoints(java.lang.CharSequence,int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="13"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="10" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="9"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="9"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="10"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="10"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="11"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="9"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="11"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="12"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="9"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="11"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="13"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="13"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="11"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="11"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="13" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="10"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="12" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="12"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="10"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="10"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="12"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="10"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="13"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="12"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="11"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: int hashCode&gt;]" AccessPathTypes="[char]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: int offset&gt;]" AccessPathTypes="[char]" taintSubFields="true"></to></flow></flows></method><method id="boolean isLetterOrDigit(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int codePointBefore(java.lang.CharSequence,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="3"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="4" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="3"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="char" gap="5"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="char" gap="4"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="4"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="5"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="4"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="5" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="4"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="5"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="4"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="3"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="3"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="4"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="5"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="3"></to></flow></flows></method><method id="java.lang.Character valueOf(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="java.lang.Character" AccessPath="[&lt;java.lang.Character: char value&gt;]" AccessPathTypes="[char]" taintSubFields="true"></to></flow></flows></method><method id="char[] toChars(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="char[]" taintSubFields="true"></to></flow></flows></method><method id="boolean isIdentifierIgnorable(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isTitleCase(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object clone()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean isUnicodeIdentifierPart(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int compare(char,char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="char"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="boolean isLowerCase(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String getName(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.lang.String" taintSubFields="true"></to></flow></flows></method><method id="boolean isMirrored(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isTitleCase(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int getType(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="int digit(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean isMirrored(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isWhitespace(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int codePointBefore(char[],int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char[]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="char reverseBytes(char)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method><method id="int codePointAt(java.lang.CharSequence,int)"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="char" gap="2"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="0"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="char" gap="1"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="1" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="2" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="0"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="1"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="2"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.CharSequence" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="1"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="2"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="2"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="0"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="1"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="0"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.CharSequence" gap="0"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.CharSequence" gap="1"></to></flow></flows></method><method id="boolean isLetterOrDigit(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="boolean isLetter(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="boolean" taintSubFields="true"></to></flow></flows></method><method id="int toChars(int,char[],int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="char[]" taintSubFields="true"></to></flow></flows></method><method id="int codePointBefore(char[],int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="char[]"></from><to sourceSinkType="Return" BaseType="char" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="0" id="&lt;java.lang.CharSequence: int length()&gt;"></gap><gap num="1" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="2" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="3" id="&lt;java.lang.CharSequence: int length()&gt;"></gap><gap num="4" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="5" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="6" id="&lt;java.lang.CharSequence: int length()&gt;"></gap><gap num="7" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="8" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="9" id="&lt;java.lang.CharSequence: int length()&gt;"></gap><gap num="10" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="11" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="12" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap><gap num="13" id="&lt;java.lang.CharSequence: char charAt(int)&gt;"></gap></gaps></summary>
<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="java.lang.Object pollLast()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object getFirst()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object poll()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: java.util.LinkedList list&gt;]" AccessPathTypes="[java.util.LinkedList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: int pos&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow></flows></method><method id="boolean offerLast(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="java.util.List subList(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: java.util.AbstractList fullList&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.AbstractList$SubAbstractList" AccessPath="[&lt;java.util.AbstractList$SubAbstractList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object removeLast()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(int,java.util.Collection)"><flows><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="118"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="117"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="118"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" gap="117" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="117"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="117"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="118"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="117"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" gap="117" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="117"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="117" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="int" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="118"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" gap="117"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object element()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.Iterator" gap="123"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Iterator" gap="124"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="124"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="125" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="122"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="122"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="123"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="125"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="125"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="122"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="123"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="120"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="120"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="int" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" gap="119"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="120"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" gap="119" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="120"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="119"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object[]" gap="120"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="119" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="119"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="120"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="119"></from><to sourceSinkType="Field" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" gap="119" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="119"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="119"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.Collection" AccessPath="[&lt;java.util.ArrayList: java.lang.Object[] array&gt;]" AccessPathTypes="[java.lang.Object[]]" gap="119"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.ArrayList" AccessPath="[&lt;java.util.ArrayList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="boolean offerFirst(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="129"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" gap="129"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object getLast()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object peekLast()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: int pos&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: java.util.LinkedList list&gt;]" AccessPathTypes="[java.util.LinkedList]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object peek()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: java.util.LinkedList$Link link&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: java.util.LinkedList list&gt;]" AccessPathTypes="[java.util.LinkedList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: int pos&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$LinkIterator" AccessPath="[&lt;java.util.LinkedList$LinkIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object pop()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="void addFirst(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object clone()"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="121"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" gap="121"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" gap="121" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="121"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="121"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="121"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" gap="121" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="128"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="128"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="128" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="128"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="boolean offer(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="void push(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="void add(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object pollFirst()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object set(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator descendingIterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$ReverseLinkIterator" AccessPath="[&lt;java.util.LinkedList$ReverseLinkIterator: java.util.LinkedList this$0&gt;]" AccessPathTypes="[java.util.LinkedList]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$ReverseLinkIterator" AccessPath="[&lt;java.util.LinkedList$ReverseLinkIterator: int expectedModCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$ReverseLinkIterator" AccessPath="[&lt;java.util.LinkedList$ReverseLinkIterator: java.util.LinkedList list&gt;]" AccessPathTypes="[java.util.LinkedList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;]" AccessPathTypes="[java.util.LinkedList$Link]"></from><to sourceSinkType="Return" BaseType="java.util.LinkedList$ReverseLinkIterator" AccessPath="[&lt;java.util.LinkedList$ReverseLinkIterator: java.util.LinkedList$Link link&gt;]" AccessPathTypes="[java.util.LinkedList$Link]" taintSubFields="true"></to></flow></flows></method><method id="void addLast(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object)"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="127"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="127" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="127"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="127"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object get(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object peekFirst()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="126"></from><to sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Object" gap="126"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="126" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="126"></to></flow></flows></method><method id="java.lang.Object removeFirst()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.LinkedList" AccessPath="[&lt;java.util.LinkedList: java.util.LinkedList$Link voidLink&gt;, &lt;java.util.LinkedList$Link: java.lang.Object data&gt;]" AccessPathTypes="[java.util.LinkedList$Link, java.lang.Object]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="128" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="129" id="&lt;java.lang.Object: java.lang.String toString()&gt;"></gap><gap num="117" id="&lt;java.util.Collection: int size()&gt;"></gap><gap num="118" id="&lt;java.util.Collection: java.lang.Object[] toArray()&gt;"></gap><gap num="119" id="&lt;java.util.Collection: int size()&gt;"></gap><gap num="120" id="&lt;java.util.Collection: java.lang.Object[] toArray()&gt;"></gap><gap num="121" id="&lt;java.util.LinkedList: boolean addAll(java.util.Collection)&gt;"></gap><gap num="122" id="&lt;java.util.List: int size()&gt;"></gap><gap num="123" id="&lt;java.util.List: java.util.Iterator iterator()&gt;"></gap><gap num="124" id="&lt;java.util.Iterator: java.lang.Object next()&gt;"></gap><gap num="125" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="126" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap><gap num="127" id="&lt;java.lang.Object: boolean equals(java.lang.Object)&gt;"></gap></gaps></summary>
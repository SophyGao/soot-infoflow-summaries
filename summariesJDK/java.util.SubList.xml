<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="boolean add(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="86"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="86"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="86" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="86"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="86" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="86"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="86" taintSubFields="true"></to></flow></flows></method><method id="java.util.List subList(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList" taintSubFields="true"></to></flow></flows></method><method id="int lastIndexOf(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="91" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="int" gap="94"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="91" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="91"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="91"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="91"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="94"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="80"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="81" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="81"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="81" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="81"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="81"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="81"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="81" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="80"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="int" gap="80"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="80"></to></flow></flows></method><method id="java.lang.Object[] toArray()"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="111"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="112"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="111" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="111"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="113"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="111"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="112"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="113"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="113"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="112"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="111"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="113"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.List" gap="97"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="97"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="98"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="102"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="102" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="102"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="98"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="100"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="100"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="98"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.List" gap="97"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.List" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object get(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="76"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="76"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="76" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="76" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="76"></to></flow></flows></method><method id="boolean contains(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="108"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="108"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="110"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="108" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="108"></to></flow></flows></method><method id="void removeRange(int,int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="79"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="79"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="79"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="79" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="79" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="79" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="int"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="79" taintSubFields="true"></to></flow></flows></method><method id="void add(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="77"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="77" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="77"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="77" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="77"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="77"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="77" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object set(int,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="75" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="75"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="75" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="75"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" gap="75" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="75"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="75"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(int)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="78" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="78"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="78"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="78"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="78" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="78"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator(int)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="85" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="85"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="85" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="85"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: int val$index&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="85"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="85"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow></flows></method><method id="boolean removeAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="125"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="125" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="125"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="125"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="125" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="125"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="125"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="boolean retainAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="130"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="130"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="130" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="130"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="130"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="130" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="130"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="int hashCode()"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="105"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="107"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="105"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="105" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="105"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="java.util.ListIterator listIterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="96"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="96"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="96" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="96"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="96"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.String toString()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="135"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="135"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="135"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="137"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="135" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" gap="137"></from><to sourceSinkType="Return" BaseType="java.lang.String" AccessPath="[&lt;java.lang.String: char[] value&gt;]" AccessPathTypes="[char[]]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Iterator iterator()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="84"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="84"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="84" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="84"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;, &lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.SubList, java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.SubList this$0&gt;]" AccessPathTypes="[java.util.SubList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="84"></from><to sourceSinkType="Return" BaseType="java.util.SubList$1" AccessPath="[&lt;java.util.SubList$1: java.util.ListIterator i&gt;]" AccessPathTypes="[java.util.ListIterator]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object[] toArray(java.lang.Object[])"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="114"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="116"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="116"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="114"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="114"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="115"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="116"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="115"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.ListIterator" gap="115"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="116"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="114"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="116"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object[]"></from><to sourceSinkType="Return" BaseType="java.lang.Object[]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="114" taintSubFields="true"></to></flow></flows></method><method id="boolean addAll(int,java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="83"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="83"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="int"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="83" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="83" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Collection" gap="82"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="83"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="82"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Collection" gap="82"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.util.Collection" gap="83" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="83"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="int" gap="82"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method><method id="boolean remove(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="117" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="117"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="117"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="117"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="119"></to></flow></flows></method><method id="int indexOf(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="87"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="87"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="89"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="int" gap="90"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="87" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="87"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="90"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="87"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="boolean containsAll(java.util.Collection)"><flows><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.ListIterator" gap="121"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.ListIterator" gap="123"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="121"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="121" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="121"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="121"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="121" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="121"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow></flows></method><method id="void clear()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="95" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.AbstractList" gap="95"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" gap="95"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;]" AccessPathTypes="[java.util.AbstractList]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: java.util.AbstractList l&gt;, &lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[java.util.AbstractList, int]"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int offset&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="int" gap="95" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.SubList: int size&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="95" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.AbstractList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" gap="95"></from><to sourceSinkType="Field" BaseType="java.util.SubList" AccessPath="[&lt;java.util.AbstractList: int modCount&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="114" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="95" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="75" id="&lt;java.util.AbstractList: java.lang.Object set(int,java.lang.Object)&gt;"></gap><gap num="123" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="96" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="89" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="130" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="110" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="117" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="83" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="111" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="125" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="97" id="&lt;java.util.List: java.util.ListIterator listIterator()&gt;"></gap><gap num="116" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="84" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="91" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="81" id="&lt;java.util.AbstractList: boolean addAll(int,java.util.Collection)&gt;"></gap><gap num="98" id="&lt;java.util.ListIterator: boolean hasNext()&gt;"></gap><gap num="102" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="137" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="119" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="108" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="90" id="&lt;java.util.ListIterator: int previousIndex()&gt;"></gap><gap num="82" id="&lt;java.util.Collection: int size()&gt;"></gap><gap num="100" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="86" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="135" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="78" id="&lt;java.util.AbstractList: java.lang.Object remove(int)&gt;"></gap><gap num="80" id="&lt;java.util.Collection: int size()&gt;"></gap><gap num="85" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="107" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap><gap num="121" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="79" id="&lt;java.util.AbstractList: void removeRange(int,int)&gt;"></gap><gap num="112" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="105" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="77" id="&lt;java.util.AbstractList: void add(int,java.lang.Object)&gt;"></gap><gap num="94" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="76" id="&lt;java.util.AbstractList: java.lang.Object get(int)&gt;"></gap><gap num="115" id="&lt;java.util.ListIterator: int nextIndex()&gt;"></gap><gap num="87" id="&lt;java.util.AbstractList: java.util.ListIterator listIterator(int)&gt;"></gap><gap num="113" id="&lt;java.util.ListIterator: java.lang.Object next()&gt;"></gap></gaps></summary>
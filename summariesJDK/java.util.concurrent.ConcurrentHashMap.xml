<?xml version="1.0" ?><summary fileFormatVersion="101"><methods><method id="boolean remove(java.lang.Object,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="279"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int hashSeed&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="279" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="279"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="279" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="279" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="279"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" gap="279" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" gap="279"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]" gap="279"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="279"></to></flow></flows></method><method id="java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="270"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="270"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="270"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Thread$WeakClassKey" gap="270"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="270"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Thread$WeakClassKey" gap="270"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="270"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object remove(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="278"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.ref.Reference" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]" gap="278"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="278" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.ref.Reference" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]" gap="278"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="278"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.ref.Reference" gap="278"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.ref.Reference" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="278"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="278"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]" gap="278"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="278"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="278"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="278" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int hashSeed&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="278" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="278" taintSubFields="true"></to></flow></flows></method><method id="java.util.Enumeration keys()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: int nextSegmentIndex&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry[] currentTable&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$HashEntry[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry nextEntry&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$HashEntry]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: int nextTableIndex&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$KeyIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$KeyIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object get(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="java.util.Enumeration elements()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry[] currentTable&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$HashEntry[]]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$ValueIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$ValueIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap$HashEntry nextEntry&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$HashEntry]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: int nextSegmentIndex&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: int nextTableIndex&gt;]" AccessPathTypes="[int]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$HashIterator" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$HashIterator: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow></flows></method><method id="int size()"><flows><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: int count&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], int]"></from><to sourceSinkType="Return" BaseType="int" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object put(java.lang.Object,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentMask&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="269"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="269"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.lang.Thread$WeakClassKey" gap="269"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int segmentShift&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="269"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="269"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="269"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow></flows></method><method id="boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]" gap="280"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="280"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="280" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="280"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="280" taintSubFields="true"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int hashSeed&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="280" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="3" BaseType="java.lang.Object" gap="280" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="3" BaseType="java.lang.Object" gap="280"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="280"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="280"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" gap="280"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" gap="280" taintSubFields="true"></to></flow></flows></method><method id="java.util.Collection values()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$Values" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$Values: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.Collection values&gt;]" AccessPathTypes="[java.util.Collection]"></from><to sourceSinkType="Return" BaseType="java.util.Collection" taintSubFields="true"></to></flow></flows></method><method id="boolean equals(java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="283"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="285"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="283"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="284"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="283"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="283"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Map" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="284"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="287" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="285" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;, &lt;java.util.concurrent.ConcurrentHashMap$Segment: java.util.concurrent.ConcurrentHashMap$HashEntry[] table&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[], java.util.concurrent.ConcurrentHashMap$HashEntry[]]"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="284" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="284"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="285" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="285"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="284" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="284"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="285"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="284"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="287"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="287"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="284"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="287"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="285"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="285"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="284"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="287"></to></flow></flows></method><method id="void putAll(java.util.Map)"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map$Entry" gap="275"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map$Entry" gap="276"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.Set" gap="271"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Set" gap="272"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Map"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Map" gap="271"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="274"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="276"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="274"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="275"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.util.Iterator" gap="272"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Iterator" gap="273"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Iterator" gap="273"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Iterator" gap="274"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Iterator" gap="274"></from><to sourceSinkType="GapBaseObject" BaseType="java.util.Iterator" gap="273"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.Map" gap="271"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.util.Map" taintSubFields="true"></to></flow></flows></method><method id="java.lang.Object replace(java.lang.Object,java.lang.Object)"><flows><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="281"></to></flow><flow isAlias="false"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Thread$WeakClassKey" AccessPath="[&lt;java.lang.Thread$WeakClassKey: int hash&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="281" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Return" BaseType="java.lang.Object" gap="281"></from><to sourceSinkType="Return" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="281"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.Object" gap="281" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="0" BaseType="java.lang.reflect.WeakCache$LookupValue" AccessPath="[&lt;java.lang.reflect.WeakCache$LookupValue: java.lang.Object value&gt;]" AccessPathTypes="[java.lang.Object]" gap="281"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="281"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object"></from><to sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" gap="281" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Parameter" ParameterIndex="2" BaseType="java.lang.Object" gap="281"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="java.lang.Object" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Segment[] segments&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap$Segment[]]"></from><to sourceSinkType="GapBaseObject" BaseType="java.lang.Object" gap="281"></to></flow><flow isAlias="false"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: int hashSeed&gt;]" AccessPathTypes="[int]"></from><to sourceSinkType="Parameter" ParameterIndex="1" BaseType="int" gap="281" taintSubFields="true"></to></flow></flows></method><method id="java.util.Set entrySet()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet&gt;]" AccessPathTypes="[java.util.Set]"></from><to sourceSinkType="Return" BaseType="java.util.Set" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$EntrySet" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$EntrySet: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow></flows></method><method id="java.util.Set keySet()"><flows><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap"></from><to sourceSinkType="Return" BaseType="java.util.concurrent.ConcurrentHashMap$KeySet" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap$KeySet: java.util.concurrent.ConcurrentHashMap this$0&gt;]" AccessPathTypes="[java.util.concurrent.ConcurrentHashMap]" taintSubFields="true"></to></flow><flow isAlias="true"><from sourceSinkType="Field" BaseType="java.util.concurrent.ConcurrentHashMap" AccessPath="[&lt;java.util.concurrent.ConcurrentHashMap: java.util.Set keySet&gt;]" AccessPathTypes="[java.util.Set]"></from><to sourceSinkType="Return" BaseType="java.util.Set" taintSubFields="true"></to></flow></flows></method></methods><gaps><gap num="269" id="&lt;java.lang.ref.Reference: java.lang.Object get()&gt;"></gap><gap num="270" id="&lt;java.lang.ref.Reference: java.lang.Object get()&gt;"></gap><gap num="271" id="&lt;java.util.Map: java.util.Set entrySet()&gt;"></gap><gap num="272" id="&lt;java.util.Set: java.util.Iterator iterator()&gt;"></gap><gap num="273" id="&lt;java.util.Iterator: boolean hasNext()&gt;"></gap><gap num="274" id="&lt;java.util.Iterator: java.lang.Object next()&gt;"></gap><gap num="275" id="&lt;java.util.Map$Entry: java.lang.Object getKey()&gt;"></gap><gap num="276" id="&lt;java.util.Map$Entry: java.lang.Object getValue()&gt;"></gap><gap num="278" id="&lt;java.util.concurrent.ConcurrentHashMap$Segment: java.lang.Object remove(java.lang.Object,int,java.lang.Object)&gt;"></gap><gap num="279" id="&lt;java.util.concurrent.ConcurrentHashMap$Segment: java.lang.Object remove(java.lang.Object,int,java.lang.Object)&gt;"></gap><gap num="280" id="&lt;java.util.concurrent.ConcurrentHashMap$Segment: boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object)&gt;"></gap><gap num="281" id="&lt;java.util.concurrent.ConcurrentHashMap$Segment: java.lang.Object replace(java.lang.Object,int,java.lang.Object)&gt;"></gap><gap num="283" id="&lt;java.util.Map: int size()&gt;"></gap><gap num="284" id="&lt;java.util.Map: java.lang.Object get(java.lang.Object)&gt;"></gap><gap num="285" id="&lt;java.util.Map: java.lang.Object get(java.lang.Object)&gt;"></gap><gap num="287" id="&lt;java.util.Map: boolean containsKey(java.lang.Object)&gt;"></gap></gaps></summary>